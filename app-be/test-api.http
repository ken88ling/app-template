### API Test File for Backend Template
### Use with VS Code REST Client extension or similar tools

@baseUrl = http://localhost:4000/api/v1
@contentType = application/json

### Variables - Update these with actual values after running requests
@accessToken = your_access_token_here
@refreshToken = your_refresh_token_here
@userId = your_user_id_here

### Health Check
GET {{baseUrl}}

### ==================== AUTHENTICATION ====================

### Register New User
POST {{baseUrl}}/auth/register
Content-Type: {{contentType}}

{
  "email": "john.doe@example.com",
  "password": "Password123",
  "firstName": "John",
  "lastName": "Doe"
}

### Login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "john.doe@example.com",
  "password": "Password123"
}

### Refresh Token
POST {{baseUrl}}/auth/refresh
Content-Type: {{contentType}}

{
  "refreshToken": "{{refreshToken}}"
}

### Get Profile (Requires Auth)
GET {{baseUrl}}/auth/profile
Authorization: Bearer {{accessToken}}

### Logout (Requires Auth)
POST {{baseUrl}}/auth/logout
Authorization: Bearer {{accessToken}}

### Verify Email
POST {{baseUrl}}/auth/verify-email
Content-Type: {{contentType}}

{
  "token": "your_verification_token_here"
}

### Request Password Reset
POST {{baseUrl}}/auth/request-password-reset
Content-Type: {{contentType}}

{
  "email": "john.doe@example.com"
}

### Reset Password
POST {{baseUrl}}/auth/reset-password
Content-Type: {{contentType}}

{
  "token": "your_reset_token_here",
  "newPassword": "NewPassword123"
}

### ==================== USERS ====================

### Get All Users (Requires Auth)
GET {{baseUrl}}/users
Authorization: Bearer {{accessToken}}

### Get Users with Pagination
GET {{baseUrl}}/users?page=1&limit=10&sortBy=createdAt&sortOrder=desc
Authorization: Bearer {{accessToken}}

### Get Users by Role
GET {{baseUrl}}/users?role=USER
Authorization: Bearer {{accessToken}}

### Search Users
GET {{baseUrl}}/users?search=john
Authorization: Bearer {{accessToken}}

### Create User (Requires Manager Role)
POST {{baseUrl}}/users
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "email": "jane.smith@example.com",
  "password": "Password123",
  "firstName": "Jane",
  "lastName": "Smith",
  "role": "USER"
}

### Get User by ID
GET {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{accessToken}}

### Update User
PUT {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "firstName": "John",
  "lastName": "Updated"
}

### Update User Status (Requires Manager Role)
PATCH {{baseUrl}}/users/{{userId}}/status
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "status": "ACTIVE"
}

### Update My Profile
PUT {{baseUrl}}/users/my-profile
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "firstName": "John",
  "lastName": "UpdatedProfile"
}

### Change Password
POST {{baseUrl}}/users/change-password
Authorization: Bearer {{accessToken}}
Content-Type: {{contentType}}

{
  "oldPassword": "Password123",
  "newPassword": "NewPassword123"
}

### Delete User (Requires Admin Role)
DELETE {{baseUrl}}/users/{{userId}}
Authorization: Bearer {{accessToken}}

### ==================== TEST ENDPOINTS ====================

### Test Endpoint
GET {{baseUrl}}/test